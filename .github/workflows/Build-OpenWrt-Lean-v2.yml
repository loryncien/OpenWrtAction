name: Build OpenWrt Lean X64 (v2)

on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      KERNEL_PATCHVER:
        description: '内核补丁版本(可选)'
        required: false
        default: ''
        type: choice
        options:
          - '6.1'
          - '5.15'
          - '5.4'
      Tempoary_CONFIG:
        description: '配置文件'
        default: 'lite'
        type: choice
        options:
          - 'lite'
          - 'plus'
  # schedule:
  #   - cron: 0 19 * * *

env:
  CONFIG_FILE: config/lean-x86_64-${{ github.event.inputs.Tempoary_CONFIG }}.config
  DIY_SCRIPT: scripts/customize.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  SEND_BARK_MSG: true
  TZ: Asia/Shanghai
  KERNEL_PATCHVER: ${{ github.event.inputs.KERNEL_PATCHVER }}
  Tempoary_CONFIG: ${{ github.event.inputs.Tempoary_CONFIG }}

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq full-upgrade
        sudo -E apt-get -qq install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
        libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
        libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 \
        python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
        uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: Checkout
      uses: actions/checkout@main

    - name: Clone Source Code
      env:
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        # sed -i '$a src-git smpackage https://github.com/kenzok8/small-package' feeds.conf.default
        sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' feeds.conf.default
        sed -i '$a src-git small https://github.com/kenzok8/small' feeds.conf.default

    - name: Cache
      uses: stupidloud/cachewrtbuild@main
      with:
        #是否一并缓存.ccache目录，如果你启用了ccache。这是唯一的常用参数，其他三个用于除错，一般不需要调整
        ccache: 'true'
        #是否缓存工具链目录 
        toolchain: 'true' 
        #是否跳过工具链编译
        skip: 'true'
        #清空缓存          
        clean: 'false'
        mixkey: lean-x86_64
        prefix: ${{ github.workspace }}/openwrt

    - name: Install Feeds
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files $OPENWRT_PATH/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_PATH/.config
        chmod +x $GITHUB_WORKSPACE/scripts/*.sh
        chmod +x $DIY_SCRIPT
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_SCRIPT
        # $GITHUB_WORKSPACE/scripts/preset-clash-core.sh amd64
        $GITHUB_WORKSPACE/scripts/preset-terminal-tools.sh

        [ -n "$KERNEL_PATCHVER" ] && sed -i "/KERNEL_PATCHVER/c KERNEL_PATCHVER:=$KERNEL_PATCHVER" target/linux/x86/Makefile

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Download DL Package
      run: |
        cd $OPENWRT_PATH
        echo -e 'CONFIG_DEVEL=y\nCONFIG_CCACHE=y' >> .config # Cache.Speedup
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Firmware
      id: compile
      run: |
        cd $OPENWRT_PATH
        mkdir -p files/etc/uci-defaults
        cp $GITHUB_WORKSPACE/scripts/init-settings.sh files/etc/uci-defaults/99-init-settings
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s

        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "SDATE=$(date +"%Y%m%d")" >> $GITHUB_ENV
        echo "DEFAULT_IP=$(cat package/base-files/files/bin/config_generate | grep 'lan) ipad=' | awk -F '"' '{print $2}')" >> $GITHUB_ENV

    - name: Check Space Usage
      if: (!cancelled())
      run: df -hT

    - name: Upload Bin Directory
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-bin-x86_64-${{ env.DATE }}
        path: ${{ env.OPENWRT_PATH }}/bin

    - name: Organize Files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd $OPENWRT_PATH/bin/targets/*/*
        cat config.buildinfo
        echo "KERNEL=$(cat *.manifest | grep ^kernel | cut -d- -f2 | tr -d ' ')" >> $GITHUB_ENV
        rm -rf packages *.buildinfo *.manifest *kernel.bin *rootfs.img.gz profiles.json sha256sums
        rename -v "s/^openwrt/${{ env.Tempoary_CONFIG }}-openwrt/" * || true
        echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload Firmware To Artifact
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE != 'true' && !cancelled()
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-firmware-x86_64-${{ env.DATE }}
        path: ${{ env.FIRMWARE_PATH }}

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE_PATH} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "url=$(cat cowtransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT

    - name: Upload firmware to WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE_PATH} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "url=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> $GITHUB_OUTPUT

    - name: Upload Firmware To Release
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'
      uses: ncipollo/release-action@v1
      with:
        name: OpenWrt R${{ env.DATE }} 
        allowUpdates: true
        tag: lean-${{ env.SDATE }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE_PATH }}/*
        body: |
          ### 📒 固件信息
          - 💻 平台架构: x86_64
          - ⚽ 固件源码: https://github.com/coolsnowwolf/lede
          - 💝 源码分支: master
          - 🚀 内核版本: ${{ env.KERNEL }}
          - 🌐 默认地址: ${{ env.DEFAULT_IP }}
          - 🔑 默认密码: 无 或 password

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 12
        delete_tags: true
        delete_tag_pattern: ^lean.*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Push Bark Notification
      if: steps.organize.outputs.status == 'success' && env.SEND_BARK_MSG == 'true' && !cancelled()
      uses: shink/bark-action@v2
      with:
        key: ${{ secrets.BARKKEY }}    # Your secret key, it is required
        host: ${{ secrets.BARKHOST }}  # Your Bark host, the default is 'https://api.day.app'
        title: OpenWrt 固件编译完成！
        body: OpenWrt-k${{ env.KERNEL }}-x86_64-${{ env.Tempoary_CONFIG }}-${{ env.SDATE }}
        sound: fanfare
        isArchive: 1
        url: https://github.com/${{ github.repository }}/releases
        # automaticallyCopy: 1
        # copy: Content copied to clipboard
